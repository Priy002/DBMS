









mysql> use student;
Database changed
mysql>  create table o_rollcall(rollno int,name varchar(90),address varchar(90));
Query OK, 0 rows affected (1.67 sec)

mysql> create table n_rollcall(rollno int,name varchar(90),address varchar(90));
Query OK, 0 rows affected (1.10 sec)

mysql> insert into o_rollcall values(1,'komal','abc');
Query OK, 1 row affected (0.14 sec)


PL/SQL Cursor
• When an SQL statement is processed, Oracle creates a memory area known as context area.
• A cursor is a pointer to this context area.
• It contains all information needed for processing the statement.
• In PL/SQL, the context area is controlled by Cursor.
• A cursor contains information on a select statement and the rows of data accessed by it.
• A cursor is used to referred to a program to fetch and process the rows returned by the SQL statement, one at a
time.
There are two types of cursors:
• Implicit Cursors : automatically generated by Oracle while an SQL statement is executed, if you don't use an
explicit cursor for the statement.
• Explicit Cursors : e defined by the programmers to gain more control over the context area. These cursors should
be defined in the declaration section of the PL/SQL block. It is created on a SELECT statement which returns more
than one row.

Syntax of explicit cursor
Following is the syntax to create an explicit cursor:
CURSOR cursor_name IS select_statement;


Steps:
You must follow these steps while working with an explicit cursor.


1) Declare the cursor:
It defines the cursor with a name and the associated SELECT statement.
Syntax for explicit cursor declaration
CURSOR name IS
1. SELECT statement;
2) Open the cursor:
It is used to allocate memory for the cursor and make it easy to fetch the rows returned by the SQL statements into it.
Database Management Systems Laboratory Class:TE(ComputerEngineering)
Departmentof ComputerEngineering,ZCOER,Narhe,Pune-41 Page56
Syntax for cursor open:
OPEN cursor_name;
3) Fetch the cursor:
It is used to access one row at a time. You can fetch rows from the above-opened cursor as follows:
Syntax for cursor fetch:
FETCH cursor_name INTO variable_list;
4) Close the cursor:
It is used to release the allocated memory. The following syntax is used to close the above-opened cursors.
Syntax for cursor close:
Close cursor_name;


//create two tables. Kepp one row same in both table.


mysql> insert into o_rollcall values(2,'raj','pbc');
Query OK, 1 row affected (0.18 sec)

mysql> insert into o_rollcall values(3,'rudra','pune');
Query OK, 1 row affected (0.12 sec)

mysql> insert into n_rollcall values(1,'komal','abc');
Query OK, 1 row affected (0.13 sec)

mysql> insert into n_rollcall values(4,'lina','nashik');
Query OK, 1 row affected (0.14 sec)

mysql> insert into n_rollcall values(5,'sheetal','aaldi');
Query OK, 1 row affected (0.35 sec)

mysql> select * from o_rollcall;
+--------+-------+---------+
| rollno | name  | address |
+--------+-------+---------+
|      1 | komal | abc     |
|      2 | raj   | pbc     |
|      3 | rudra | pune    |
+--------+-------+---------+
3 rows in set (0.00 sec)

mysql> select * from n_rollcall;
+--------+---------+---------+
| rollno | name    | address |
+--------+---------+---------+
|      1 | komal   | abc     |
|      4 | lina    | nashik  |
|      5 | sheetal | aaldi   |
+--------+---------+---------+
3 rows in set (0.00 sec)


mysql> delimiter //
mysql> create procedure n1(in rno1 int)
    -> begin
    -> declare rno2 int;
    -> declare exit_cond boolean;
    -> declare c1 cursor for select rollno from o_rollcall where rollno>rno1;
    -> declare continue handler for not found set exit_cond = TRUE;
    -> open c1;
    -> l1:loop
    -> fetch c1 into rno2;
    -> if not exists(select*from n_rollcall where rollno=rno2)then
    -> insert into  n_rollcall select*from o_rollcall where rollno=rno2;
    -> end if;
    -> if exit_cond then
    -> close c1;
    -> leave l1;
    -> end if;
    -> end loop l1;
    -> end
    -> //
Query OK, 0 rows affected (1.19 sec)

mysql> delimiter;
    -> delimiter//
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delimiter;delimiter' at line 1
mysql> call n1(1);
    -> //
Query OK, 0 rows affected (0.57 sec)

mysql> delimiter ;
mysql> call n1(1);
Query OK, 0 rows affected (0.00 sec)

mysql> select*from n_rollcall;
+--------+---------+---------+
| rollno | name    | address |
+--------+---------+---------+
|      1 | komal   | abc     |
|      4 | lina    | nashik  |
|      5 | sheetal | aaldi   |
|      2 | raj     | pbc     |
|      3 | rudra   | pune    |
+--------+---------+---------+
5 rows in set (0.00 sec)
